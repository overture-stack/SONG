#
# Copyright (c) 2024 The Ontario Institute for Cancer Research. All rights reserved.
#
# This program and the accompanying materials are made available under the terms of the GNU Public License v3.0.
# You should have received a copy of the GNU General Public License along with
# this program. If not, see <http://www.gnu.org/licenses/>.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY
# EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
# OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT
# SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
# INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED
# TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER
# IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
# ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#

###############################################################################
# Application Configurations for the Song Server
#
# This file contains various configuration profiles for the Song Server application.
# Many of the values provided are placeholders. Please update them according to your specific deployment.
###############################################################################

###############################################################################
# Profile - common (default)
# This is the default profile with common settings for all environments.
###############################################################################

server:
  version: 1.0
  port: 8080
  max-http-header-size: 10KB  # Fix issue with IllegalArgumentException: Request header is too large

song:
  id: song.overture  # The unique id of this song instance, important for multi Song setups

score:
  accessToken: "68fb42b4-f1ed-4e8c-beab-3724b99fe528"   # Requires both READ (downlaod) and WRITE (upload) scopes
  url: "http://localhost:8087"

id:
  useLocal: true
  federated:
    auth:
      bearer:
        token:
        credentials:
          url:
          clientId:
          clientSecret:
    uriTemplate:
      donor: https://id.example.org/donor/id?submittedProjectId={studyId}&submittedDonorId={submitterId}&create=true
      specimen: https://id.example.org/specimen/id?submittedProjectId={studyId}&submittedSpecimenId={submitterId}&create=true
      sample: https://id.example.org/sample/id?submittedProjectId={studyId}&submittedSampleId={submitterId}&create=true

validation:
  delayMs: 30
  threads:
    core: 5
    max: 10
  queue:
    capacity: 100

schemas:
  enforceLatest: true

swagger:
  alternateUrl: "/api-docs"
  host: ""
  basePath: ""

security:
  basic:
    enabled: false

auth:
  connection:
    maxRetries: 5
    initialBackoff: 15000
    multiplier: 2.0

management:
  server:
    port: 8081

spring:
  flyway:
    enabled: true
    locations: "classpath:db/migration"
  jpa:
    properties:
      hibernate:
        dialect: com.marvinformatics.hibernate.json.PostgreSQLJsonDialect
        temp.use_jdbc_metadata_defaults: false  # Disable driver's feature detection
  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://localhost:5433/songDb?stringtype=unspecified
    username: admin 
    password: admin123
    max-active: 10
    max-idle: 1
    min-idle: 1
    init.mode: never
    hikari:
      connection-timeout: 500
  mvc:
    pathmatch:
      matching-strategy: ant_path_matcher

logging:
  level:
    root: INFO
    io.swagger.models.parameters.AbstractSerializableParameter: ERROR

---

###############################################################################
# Profile - "dev"
# Configuration for development environment
###############################################################################

spring:
  config:
    activate:
      on-profile: dev
  datasource:
    init.mode: never
    hikari:
      connection-timeout: 500

management:
  server:
    port: -1

id:
  persistInMemory: true

---

###############################################################################
# Profile - "secure"
# Configuration for secure environment with OAuth2
###############################################################################

spring:
  config:
    activate:
      on-profile: secure
  security:
    oauth2:
      resourceserver:
        jwt:
          # public-key-location: http://localhost:8081/oauth/token/public_key  # Uncomment for Ego
          jwk-set-uri: http://localhost/realms/myrealm/protocol/openid-connect/certs  

auth:
  server:
    introspectionUri: http://keycloak:8180/realms/myrealm/apikey/check_api_key/
    tokenName: apiKey
    provider: keycloak  # Valid options: ego or keycloak
    keycloak:
      host: http://localhost
      realm: "myrealm"
    clientID: dms
    clientSecret: t016kqXfI648ORoIP5gepqCzqtsRjlcc
    scope:
      study:
        prefix: "STUDY."
        suffix: ".WRITE"
      system: "song.WRITE"

---

###############################################################################
# Profile - "prod"
# Configuration for production environment
###############################################################################

spring:
  config:
    activate:
      on-profile: prod
  datasource:
    init.mode: never
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://localhost:5433/songDb?stringtype=unspecified
    username: admin 
    password: admin123
    max-active: 10
    max-idle: 1
    min-idle: 1

---

###############################################################################
# Profile - "kafka"
# Configuration for Kafka integration
###############################################################################

spring:
  config:
    activate:
      on-profile: kafka
  kafka:
    bootstrap-servers: localhost:9092
    template:
      default-topic: song-analysis

---

###############################################################################
# Profile - "score-client-cred"
# Configuration for SCORE client credentials
###############################################################################

spring:
  config:
    activate:
      on-profile: score-client-cred

score:
  url: "http://localhost:8087"
  clientCredentials:
    id: oauth
    secret: oauthsecret
    tokenUrl: http://ego-api:8080/oauth/token
    systemScope: "score.WRITE"  # Storage scope needs to include both READ and WRITE

---

###############################################################################
# Testing Profiles
# The rest of the profiles are used for various testing purposes
###############################################################################

# Profile - "fastTest"

spring:
  config:
    activate:
      on-profile: fastTest

auth:
  connection:
    maxRetries: 5
    initialBackoff: 50
    multiplier: 1.2

---

# Profile - "async-test"

spring:
  config:
    activate:
      on-profile: async-test

validation:
  delayMs: 1000

---

# Profile - "test"

spring:
  config:
    activate:
      on-profile: test
  autoconfigure:
    exclude: SecurityConfig.class
  datasource:
    driver-class-name: org.testcontainers.jdbc.ContainerDatabaseDriver
    url: jdbc:tc:postgresql:9.6.12://blabla:5433/test_db?stringtype=unspecified
    username:
    password:
    max-active: 10
    max-idle: 1
    min-idle: 1
    hikari:
      connection-timeout: 500
      validation-timeout: 250

id:
  persistInMemory: true

score:
  url: http://localhost:0  # This url should not exist

auth:
  server:
    url: "http://localhost:8084/check_token/"
    clientId: "3kJhz9pNtC0pFHAxr2SPkUkGjXrkWWqGcnPC0vBP"
    clientSecret: "v9mjRtuEVwpt7cgqnsq6mxtCa5FbUOpKLGh7WX8a1dWbBKfrM3iV3VYMtE60jr3W7GLWtNeYIaJ8EUxPkaInclWVXf64qKdR3IKwyfpDU7JhvWEwIYQYdwV1YAUZjB2e"
    tokenName: "token"
    enableStrictSSL: false
    enableHttpLogging: false
    scope:
      study:
        prefix: "song-"
        suffix: ".WRITE"
      system: "song.WRITE"

---